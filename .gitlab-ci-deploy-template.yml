#
# IMPORTANT: Do not rename this file or move to another folder. Doing so would
#            break the CI pipelines of projects that "include:" this file.
#
# Included Variables

# Using stage vars to generate yaml, because following does not work 'dynamically' but needs a fixed static path to the downstream project.
#trigger:
##  project: $DEPLOY_PROJECT


include:
  .gitlab-ci-build-vars.yml

stages:
- vars
- deploy-image

variables:
  PROJECT_PATH: gcp-solutions/hcls/claims-modernization/gitlab-ci
  TRIGGER_FILE: .gitlab-ci-trigger-template.yml

# Sets TRIGGER_BRANCH:  if branch with same name exists in the deploy project - uses it. Otherwise, Falls back to default branch
.create yaml: &create_yaml
  script:
  - echo IMAGE = ${IMAGE}
  - echo BRANCH = ${CI_COMMIT_BRANCH}
  - apk update
  - apk add git
  - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${DEPLOY_PROJECT}.git "$(basename ${DEPLOY_PROJECT})"
  - cd $(basename ${DEPLOY_PROJECT})
  - TRIGGER_BRANCH=`git remote show https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${DEPLOY_PROJECT}.git | grep 'HEAD branch' | cut -d' ' -f5`
  - >
    if [[ -z ${CI_COMMIT_BRANCH} ]]; then
      branch_exists_in_deploy=$(git ls-remote --heads origin ${CI_COMMIT_BRANCH})
      if [[ -z ${branch_exists_in_deploy} ]]; then
          TRIGGER_BRANCH=${CI_COMMIT_BRANCH}
      fi
    fi
  - cd ..
  - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${PROJECT_PATH}.git "$(basename ${PROJECT_PATH})"
  - >
    sed  's|__PROJECT__|'"${DEPLOY_PROJECT}"'|g;
          s|__BRANCH__|'"${TRIGGER_BRANCH}"'|g;
          s|__IMAGE__|'"${IMAGE}"'|g;
          s|__UPSTREAM_PROJECT_NAME__|'"${CI_PROJECT_NAME}"'|g;
          s|__UPSTREAM_PROJECT_PATH__|'"${CI_PROJECT_PATH}"'|g;
          s|__ENVIRONMENT__|'"${ENVIRONMENT}"'|g;
          s|__NAMESPACE__|'"${NAMESPACE}"'|g;
    '
    $(basename ${PROJECT_PATH})/"${TRIGGER_FILE}" > ${TRIGGER_FILE}
  artifacts:
    paths:
    - ${TRIGGER_FILE}


use-build-results:
  stage: vars
  script:
  - cat ${VARIABLES_FILE}
  - source ${VARIABLES_FILE}
  <<: *create_yaml

get-latest-image:
  stage: vars
  rules:
  - !reference [.build_rules, rules]
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: never
  script:
  - IMAGE = $IMAGE_LATEST
  - echo Branch = ${CI_COMMIT_BRANCH}
  <<: *create_yaml


get-mr-image:
  stage: vars
  rules:
  - !reference [.build_rules, rules]
  script:
  - echo $IMAGE $ENVIRONMENT $NAMESPACE
  <<: *create_yaml

execute:
  stage: deploy-image
  trigger:
    include:
    - artifact: ${TRIGGER_FILE}
      job: use-build-results
    strategy: depend

# Takes latest image of the branch and deploys it to test environment
deploy to test:
  stage: deploy-image
  trigger:
    include:
    - artifact: ${TRIGGER_FILE}
      job: get-latest-image
    strategy: depend
  when: manual

# Takes latest image of the branch and deploys it to test environment
deploy MR to test:
  stage: deploy-image
  trigger:
    include:
    - artifact: ${TRIGGER_FILE}
      job: get-mr-image
    strategy: depend
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: manual

# Takes latest image of the branch and deploys it to test environment
deploy to development:
  stage: deploy-image
  trigger:
    include:
    - artifact: ${TRIGGER_FILE}
      job: get-latest-image
    strategy: depend
  when: manual