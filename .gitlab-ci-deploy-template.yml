#
# IMPORTANT: Do not rename this file or move to another folder. Doing so would
#            break the CI pipelines of projects that "include:" this file.
#

# Requires $DEPLOY_PROJECT to be set
# Included Variables
include:
  .gitlab-ci-build-vars.yml

stages:
- deploy-image

deploy:
  rules:
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    variables:
      IMAGE: $RELEASE_IMAGE
      ENVIRONMENT: demo
  - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
    variables:
      IMAGE: $MR_IMAGE
      ENVIRONMENT: test
  - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "merge_request_event"
    variables:
      IMAGE: $QA_IMAGE
      ENVIRONMENT: development
  variables:
    APPLICATION: $CI_PROJECT_NAME
    IMAGE_TAG: $IMAGE
    UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME
    PIPELINE_TRIGGERED: 'true' #workaround because CI_PIPELINE_TRIGGERED is not working in GitLab! TODO
    ENV: $ENVIRONMENT
#    VARIABLES: ${VARIABLES_FILE}
  stage: deploy-image
  only:
    variables:
      - $DEPLOY_PROJECT
  trigger:
    project: gcp-solutions/hcls/claims-modernization/gitlab-test-examples/deployapplications #TODO cannot reference $DEPLOY_PROJECT
    branch: main #TODO
#
#.deploy_image: &deploy_image
#  variables: # TO be passed downstream
#    APPLICATION: $CI_PROJECT_NAME
#    UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME
#    NAMESPACE: $NAMESPACE
#  before_script:
#  - source $VARIABLES_FILE
#  script:
#  - echo "Deploying image [$IMAGE] to project=[$DEPLOY_PROJECT], branch=[$TRIGGER_BRANCH], namespace=[$NAMESPACE]"
#  only:
#    variables:
#      - $DEPLOY_PROJECT
#  trigger:
#    project: ${DEPLOY_PROJECT}
#    branch: ${TRIGGER_BRANCH}
#
## Deploy to Demo when commit on the main branch
#deploy to demo:
#  environment: demo
#  stage: deploy-image
#  variables:
#    TRIGGER_BRANCH: $CI_DEFAULT_BRANCH
#    NAMESPACE: "demo"
#  <<: *deploy_image
#  only:
#    variables:
#      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#
#
## Deploy to Test when merge request on the main branch
#deploy to test:
#  environment: test
#  stage: deploy-image
#  variables:
#    TRIGGER_BRANCH: $CI_DEFAULT_BRANCH
#    NAMESPACE: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
#  <<: *deploy_image
#  script:
#  - echo "CI_MERGE_REQUEST_SOURCE_BRANCH_NAME = $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
#  only:
#    variables:
#      - $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
#
## Deploy to development when commit to the feature branch
#deploy to development:
#  environment: development
#  stage: deploy-image
#  variables:
#    TRIGGER_BRANCH: $CI_COMMIT_REF_NAME
#    NAMESPACE: $CI_COMMIT_REF_SLUG
#  <<: *deploy_image
#  only:
#  - branches
#  except:
#    variables:
#      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
