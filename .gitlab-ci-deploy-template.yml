#
# IMPORTANT: Do not rename this file or move to another folder. Doing so would
#            break the CI pipelines of projects that "include:" this file.
#

# Requires $DEPLOY_PROJECT to be set
# Included Variables
#include:
#  .gitlab-ci-build-vars.yml

stages:
- create
- execute
- deploy-image

variables:
  TEST1: "${DEPLOY_PROJECT}"

#deploy:
#  stage: deploy-image
#  variables:
#    APPLICATION: $CI_PROJECT_NAME
#    IMAGE_TAG: $IMAGE
#    UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME
#    MERGE_REQUEST_TARGET_BRANCH_NAME: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
#    UPSTREAM_PROJECT: $CI_PROJECT_PATH
#    UPSTREAM_SHORT_SHA: $CI_COMMIT_SHORT_SHA
#    PIPELINE_TRIGGERED: 'true' #workaround because CI_PIPELINE_TRIGGERED is not working in GitLab! TODO
#    PROJECT: $DEPLOY_PROJECT
#  rules:
#  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#    variables:
#      IMAGE: $RELEASE_IMAGE
#      ENVIRONMENT: demo
#      TRIGGER_BRANCH: main
#  - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
#    variables:
#      IMAGE: $MR_IMAGE
#      ENVIRONMENT: test
#      TRIGGER_BRANCH: ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}
#  - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "merge_request_event"
#    variables:
#      IMAGE: $QA_IMAGE
#      ENVIRONMENT: development
#      TRIGGER_BRANCH: main
#  trigger:
#    project: gcp-solutions/hcls/claims-modernization/gitlab-test-examples/deployapplications
#    #project: "${PROJECT}"  #TODO
#    branch: "${TRIGGER_BRANCH}"

#create:
#  stage: create
#  script:
#    - cp ${CI_PROJECT_DIR}/.gitlab-ci-rules.yml ${CI_PROJECT_DIR}/test.yml
#  artifacts:
#    paths:
#      - ${CI_PROJECT_DIR}/test.yml

#execute:
#  stage: deploy-image
#  trigger:
#    include:
#    - artifact: ${CI_PROJECT_DIR}/test.yml
#      job: create
#    strategy: depend
