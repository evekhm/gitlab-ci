#
# IMPORTANT: Do not rename this file or move to another folder. Doing so would
#            break the CI pipelines of projects that "include:" this file.
#

#Need to dynamically generate yml file, because otherwise parameters such as Project to be Triggered cannot be dynamically set.

include:
- local: /.gitlab/ci/.build-vars.gitlab-ci.yml

stages:
- vars
- deploy

variables:
  #PROJECT_PATH: ${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME} # needs to be static otherwise it is the Project info from where it is being called
  TRIGGER_FILE: deploy-trigger.yml

.generate_yaml: &generate_yaml
- echo "generating trigger YAML, DEPLOY_PROJECT=$DEPLOY_PROJECT, TRIGGER_BRANCH=$TRIGGER_BRANCH"
- echo "stages:" > "${TRIGGER_FILE}"
- echo "- deploy-image" >> "${TRIGGER_FILE}"
- echo "deploy:" >> "${TRIGGER_FILE}"
- >
  printf
  "
    stage: deploy-image
    rules:
    - if: "'$CI_MERGE_REQUEST_ID || $CI_COMMIT_TAG || $CI_COMMIT_BRANCH'"
      when: always
    variables:
      IMAGE: %s
      UPSTREAM_PROJECT_NAME: %s
      UPSTREAM_PROJECT_PATH: %s
      ENVIRONMENT: %s
      NAMESPACE: %s
      PIPELINE_TRIGGERED: 'true' #workaround because CI_PIPELINE_TRIGGERED is not working in GitLab!
    trigger:
      project: %s
      branch: %s"  ${IMAGE} ${CI_PROJECT_NAME} ${CI_PROJECT_PATH}  $ENVIRONMENT $NAMESPACE ${DEPLOY_PROJECT} ${TRIGGER_BRANCH} >> "${TRIGGER_FILE}"
- cat "${TRIGGER_FILE}"

# Check if the branch with the same name as commit branch exists for the DEPLOY_PROJECT.
# Otherwise, fall back to the main branch
# set TRIGGER_BRANCH
.get_trigger_branch: &get_trigger_branch
- echo CI_COMMIT_BRANCH = ${CI_COMMIT_BRANCH}, CI_MERGE_REQUEST_SOURCE_BRANCH_NAME = ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}
- cat ${VARIABLES_FILE}
- source ${VARIABLES_FILE}
- echo IMAGE = ${IMAGE}  ENVIRONMENT=${ENVIRONMENT} NAMESPACE=${NAMESPACE}
- apk update
- apk add git
- git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${DEPLOY_PROJECT}.git "$(basename ${DEPLOY_PROJECT})"
- cd $(basename ${DEPLOY_PROJECT})
- TRIGGER_BRANCH=`git remote show https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${DEPLOY_PROJECT}.git | grep 'HEAD branch' | cut -d' ' -f5`
- if [[ -n "${CI_COMMIT_BRANCH}" ]]; then CHECK_BRANCH=${CI_COMMIT_BRANCH}; fi
- if [[ -n "${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}" ]]; then CHECK_BRANCH=${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}; fi
- |
  if [[ -n ${CHECK_BRANCH} ]]; then
    echo CHECK_BRANCH=$CHECK_BRANCH
    git ls-remote --heads origin ${CHECK_BRANCH}
    branch_exists_in_deploy=$(git ls-remote --heads origin ${CHECK_BRANCH} | wc -l)
    if [[ "$branch_exists_in_deploy" -eq 1 ]]; then
        TRIGGER_BRANCH=${CHECK_BRANCH}
    fi
  fi
- export TRIGGER_BRANCH=$TRIGGER_BRANCH
- cd ..


use-build-results:
  stage: vars
  script:
  - *get_trigger_branch
  - *generate_yaml
  artifacts:
    paths:
    - ${TRIGGER_FILE}

execute:
  stage: deploy
  trigger:
    include:
    - artifact: ${TRIGGER_FILE}
      job: use-build-results
    strategy: depend

# ------- Workaround GitLab Limitation, that it cannot execute same way the flow on the MR
get-mr-image:
  extends: use-build-results
  rules:
  - if: $CI_MERGE_REQUEST_ID

deploy:
  stage: deploy
  trigger:
    include:
    - artifact: ${TRIGGER_FILE}
      job: get-mr-image
    strategy: depend
  rules:
  - if: $CI_MERGE_REQUEST_ID
# ------- End workaround



