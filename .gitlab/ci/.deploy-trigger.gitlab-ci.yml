#
# IMPORTANT: Do not rename this file or move to another folder. Doing so would
#            break the CI pipelines of projects that "include:" this file.
#

#Need to dynamically generate yml file, because otherwise parameters such as Project to be Triggered cannot be dynamically set.

include:
- local: /.gitlab/ci/.build-vars.gitlab-ci.yml

stages:
- vars
- deploy

variables:
  PROJECT_PATH: ${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}
  TRIGGER_FILE: .gitlab/ci/deploy-template.yml


.create yaml: &create_yaml
  script:
  - echo CI_COMMIT_BRANCH = ${CI_COMMIT_BRANCH}, CI_MERGE_REQUEST_SOURCE_BRANCH_NAME = ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}
  - cat ${VARIABLES_FILE}
  - source ${VARIABLES_FILE}
  - echo IMAGE = ${IMAGE}  ENVIRONMENT=${ENVIRONMENT} NAMESPACE=${NAMESPACE}
  - apk update
  - apk add git
  - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${DEPLOY_PROJECT}.git "$(basename ${DEPLOY_PROJECT})"
  - cd $(basename ${DEPLOY_PROJECT})
  - TRIGGER_BRANCH=`git remote show https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${DEPLOY_PROJECT}.git | grep 'HEAD branch' | cut -d' ' -f5`
  - if [[ -n "${CI_COMMIT_BRANCH}" ]]; then CHECK_BRANCH=${CI_COMMIT_BRANCH}; fi
  - if [[ -n "${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}" ]]; then CHECK_BRANCH=${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}; fi
  - |
    if [[ -n ${CHECK_BRANCH} ]]; then
      echo CHECK_BRANCH=$CHECK_BRANCH
      git ls-remote --heads origin ${CHECK_BRANCH}
      branch_exists_in_deploy=$(git ls-remote --heads origin ${CHECK_BRANCH} | wc -l)
      if [[ "$branch_exists_in_deploy" -eq 1 ]]; then
          TRIGGER_BRANCH=${CHECK_BRANCH}
      fi
    fi
  - echo TRIGGER_BRANCH=$TRIGGER_BRANCH
  - cd ..
  - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${PROJECT_PATH}.git "$(basename ${PROJECT_PATH})"
  - >
    sed  's|__PROJECT__|'"${DEPLOY_PROJECT}"'|g;
          s|__BRANCH__|'"${TRIGGER_BRANCH}"'|g;
          s|__IMAGE__|'"${IMAGE}"'|g;
          s|__UPSTREAM_PROJECT_NAME__|'"${CI_PROJECT_NAME}"'|g;
          s|__UPSTREAM_PROJECT_PATH__|'"${CI_PROJECT_PATH}"'|g;
          s|__ENVIRONMENT__|'"${ENVIRONMENT}"'|g;
          s|__NAMESPACE__|'"${NAMESPACE}"'|g;
    '
    $(basename ${PROJECT_PATH})/"${TRIGGER_FILE}" > ${TRIGGER_FILE}
  artifacts:
    paths:
    - ${TRIGGER_FILE}


use-build-results:
  stage: vars
  <<: *create_yaml

execute:
  stage: deploy
  trigger:
    include:
    - artifact: ${TRIGGER_FILE}
      job: use-build-results
    strategy: depend

# ------- Workaround GitLab Limitation, that it cannot execute same way the flow on the MR
get-mr-image:
  extends: use-build-results
  rules:
  - if: $CI_MERGE_REQUEST_ID

deploy:
  stage: deploy
  trigger:
    include:
    - artifact: ${TRIGGER_FILE}
      job: get-mr-image
    strategy: depend
  rules:
  - if: $CI_MERGE_REQUEST_ID
# ------- End workaround



