variables:
  # Environment names
  DEV_ENV_NAME: 'development'
  TEST_ENV_NAME: 'test'
  DEMO_ENV_NAME: 'demo'

  VARIABLES_FILE: ${CI_PROJECT_DIR}/variables.env

  #Post-fix for the repository path of the built container images per environment
  QA: "qa"
  MR: "mr"
  RELEASED: "released"

.build_vars:
  rules:
  # DEMO Deployment on commit to the main branch => Released images
  # Note: When Commit is done on development branch <branch-name> for application, Pipeline is triggered for deployment. If Deploy Applications project has <branch-name> branch, it would be used for deployment.
  #       However, it is not required and by default it would use the main branch. In this case, we do not want our changes to go to Production, they should go to the default Development environment.
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && ($PIPELINE_TRIGGERED != 'true' || ($PIPELINE_TRIGGERED == 'true' && $ENVIRONMENT == 'demo'))
    variables:
      IMAGE_TYPE: $RELEASED
      REPO_SUB: ""
      IMAGE_REPO: ${CI_REGISTRY_IMAGE}/${REPO_SUB}${IMAGE_TYPE} #<path_to_repo>/released
      IMAGE_TAG: $CI_COMMIT_SHORT_SHA
      KUBE_NAMESPACE: $DEMO_ENV_NAME # main branches can be named differently, so using unique namespace 'demo' instead
      ENVIRONMENT: $DEMO_ENV_NAME
      KUBE_CONTEXT: $KUBE_CONTEXT_DEMO
      PROJECT_ID: $PROJECT_ID_DEMO

  # TEST Deployment on Merge Request
  - if: $CI_MERGE_REQUEST_ID
    variables:
      IMAGE_TYPE: $MR
      REPO_SUB: ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}/
      IMAGE_REPO: ${CI_REGISTRY_IMAGE}/${REPO_SUB}${IMAGE_TYPE}  #<path_to_repo>/<feature_name>/mr
      IMAGE_TAG: $CI_MERGE_REQUEST_ID
      ENVIRONMENT: $TEST_ENV_NAME
      KUBE_NAMESPACE: ${TEST_ENV_NAME}-${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME} # This will need a manual fix for making it a SLUG
      KUBE_CONTEXT: $KUBE_CONTEXT_TEST
      PROJECT_ID: $PROJECT_ID_TEST

  # DEVELOPMENT Deployment on commit to the feature branch
  - if: ($CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "merge_request_event") || ($PIPELINE_TRIGGERED == 'true' && $ENVIRONMENT == 'development')
    variables:
      IMAGE_TYPE: $QA
      REPO_SUB: ${CI_COMMIT_REF_SLUG}/
      IMAGE_REPO: ${CI_REGISTRY_IMAGE}/${REPO_SUB}${IMAGE_TYPE}    #<path_to_repo>/<feature_name>/qa
      IMAGE_TAG: $CI_COMMIT_SHORT_SHA
      ENVIRONMENT: $DEV_ENV_NAME
      KUBE_NAMESPACE: ${DEV_ENV_NAME}-${CI_COMMIT_REF_SLUG}
      KUBE_CONTEXT: $KUBE_CONTEXT_DEV
      PROJECT_ID: $PROJECT_ID_DEV
